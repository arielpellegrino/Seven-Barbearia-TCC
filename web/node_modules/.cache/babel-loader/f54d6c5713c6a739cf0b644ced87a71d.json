{"ast":null,"code":"import { takeLatest, all, call, put, select } from 'redux-saga/effects';\nimport { updateCliente, resetCliente, allClientes as allClientesAction } from './actions';\nimport types from './types';\nimport api from '../../../services/api';\nimport { notification } from '../../../services/rsuite';\nimport consts from '../../../consts';\nexport function* filterCliente({\n  filters\n}) {\n  const {\n    form\n  } = yield select(state => state.cliente);\n\n  try {\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: true\n      }\n    }));\n    const {\n      data: res\n    } = yield call(api.post, '/cliente/filter', filters);\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: false\n      }\n    }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message\n      });\n      return false;\n    }\n\n    if (res.clientes.length > 0) {\n      yield put(updateCliente({\n        cliente: res.clientes[0],\n        form: { ...form,\n          filtering: false,\n          disabled: true\n        }\n      }));\n    } else {\n      yield put(updateCliente({\n        form: { ...form,\n          filtering: false,\n          disabled: false\n        }\n      }));\n    }\n\n    console.log(res.clientes);\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: false\n      }\n    }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message\n    });\n  }\n}\nexport function* addCliente() {\n  try {\n    const {\n      cliente,\n      form,\n      components\n    } = yield select(state => state.cliente);\n    yield put(updateCliente({\n      form: { ...form,\n        saving: true\n      }\n    }));\n    const {\n      data: res\n    } = yield call(api.post, '/cliente', {\n      cliente,\n      salaoId: consts.salaoId\n    });\n    yield put(updateCliente({\n      form: { ...form,\n        saving: false\n      }\n    }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message\n      });\n      return false;\n    }\n\n    yield put(allClientesAction());\n    yield put(updateCliente({\n      components: { ...components,\n        drawer: false\n      }\n    }));\n    yield put(resetCliente());\n    notification('success', {\n      placement: 'topStart',\n      title: 'Feitoooo!!',\n      description: 'Cliente salvo com sucesso!'\n    });\n  } catch (err) {\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message\n    });\n  }\n}\nexport function* allClientes() {\n  const {\n    form\n  } = yield select(state => state.cliente);\n\n  try {\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: true\n      }\n    }));\n    const {\n      data: res\n    } = yield call(api.get, `/cliente/salao/608c4b1d73830f4abcb4d904`);\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: false\n      }\n    }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message\n      });\n      return false;\n    }\n\n    yield put(updateCliente({\n      clientes: res.clientes\n    }));\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({\n      form: { ...form,\n        filtering: false\n      }\n    }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message\n    });\n  }\n}\nexport function* unlinkCliente({\n  payload\n}) {\n  const {\n    form,\n    components,\n    cliente\n  } = yield select(state => state.cliente);\n\n  try {\n    yield put(updateCliente({\n      form: { ...form,\n        saving: true\n      }\n    }));\n    const {\n      data: res\n    } = yield call(api.delete, `/cliente/vinculo/${cliente.vinculoId}`);\n    yield put(updateCliente({\n      form: { ...form,\n        saving: false\n      }\n    }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message\n      });\n      return false;\n    }\n\n    notification('success', {\n      placement: 'topStart',\n      title: 'Tudo certo',\n      description: 'O cliente foi desvinculado com sucesso!'\n    });\n    yield put(allClientesAction());\n    yield put(updateCliente({\n      components: { ...components,\n        drawer: false,\n        confirmDelete: false\n      }\n    }));\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({\n      form: { ...form,\n        saving: false\n      }\n    }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message\n    });\n  }\n}\nexport default all([takeLatest(types.ADD_CLIENTE, addCliente), takeLatest(types.FILTER_CLIENTE, filterCliente), takeLatest(types.ALL_CLIENTES, allClientes), takeLatest(types.UNLINK_CLIENTE, unlinkCliente)]);","map":{"version":3,"sources":["/home/arielpellegrino/Documentos/BBBBBBBB/SevenBarbearia/C/web/src/store/modules/cliente/sagas.js"],"names":["takeLatest","all","call","put","select","updateCliente","resetCliente","allClientes","allClientesAction","types","api","notification","consts","filterCliente","filters","form","state","cliente","filtering","data","res","post","error","placement","title","description","message","clientes","length","disabled","console","log","err","addCliente","components","saving","salaoId","drawer","get","unlinkCliente","payload","delete","vinculoId","confirmDelete","ADD_CLIENTE","FILTER_CLIENTE","ALL_CLIENTES","UNLINK_CLIENTE"],"mappings":"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","sourcesContent":["import { takeLatest, all, call, put, select } from 'redux-saga/effects';\nimport {\n  updateCliente,\n  resetCliente,\n  allClientes as allClientesAction,\n} from './actions';\nimport types from './types';\nimport api from '../../../services/api';\nimport { notification } from '../../../services/rsuite';\nimport consts from '../../../consts';\n\nexport function* filterCliente({ filters }) {\n  const { form } = yield select((state) => state.cliente);\n\n  try {\n    yield put(updateCliente({ form: { ...form, filtering: true } }));\n\n    const { data: res } = yield call(api.post, '/cliente/filter', filters);\n    yield put(updateCliente({ form: { ...form, filtering: false } }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message,\n      });\n      return false;\n    }\n\n    if (res.clientes.length > 0) {\n      yield put(\n        updateCliente({\n          cliente: res.clientes[0],\n          form: { ...form, filtering: false, disabled: true },\n        })\n      );\n    } else {\n      yield put(\n        updateCliente({\n          form: { ...form, filtering: false, disabled: false },\n        })\n      );\n    }\n\n    console.log(res.clientes);\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({ form: { ...form, filtering: false } }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message,\n    });\n  }\n}\n\nexport function* addCliente() {\n  try {\n    const { cliente, form, components } = yield select(\n      (state) => state.cliente\n    );\n    yield put(updateCliente({ form: { ...form, saving: true } }));\n\n    const { data: res } = yield call(api.post, '/cliente', {\n      cliente,\n      salaoId: consts.salaoId,\n    });\n    yield put(updateCliente({ form: { ...form, saving: false } }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message,\n      });\n      return false;\n    }\n\n    yield put(allClientesAction());\n    yield put(updateCliente({ components: { ...components, drawer: false } }));\n    yield put(resetCliente());\n\n    notification('success', {\n      placement: 'topStart',\n      title: 'Feitoooo!!',\n      description: 'Cliente salvo com sucesso!',\n    });\n  } catch (err) {\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message,\n    });\n  }\n}\n\nexport function* allClientes() {\n  const { form } = yield select((state) => state.cliente);\n\n  try {\n    yield put(updateCliente({ form: { ...form, filtering: true } }));\n\n    const { data: res } = yield call(\n      api.get,\n      `/cliente/salao/608c4b1d73830f4abcb4d904`\n    );\n    yield put(updateCliente({ form: { ...form, filtering: false } }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message,\n      });\n      return false;\n    }\n\n    yield put(updateCliente({ clientes: res.clientes }));\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({ form: { ...form, filtering: false } }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message,\n    });\n  }\n}\n\nexport function* unlinkCliente({ payload }) {\n  const { form, components, cliente } = yield select((state) => state.cliente);\n\n  try {\n    yield put(updateCliente({ form: { ...form, saving: true } }));\n\n    const { data: res } = yield call(\n      api.delete,\n      `/cliente/vinculo/${cliente.vinculoId}`\n    );\n    yield put(updateCliente({ form: { ...form, saving: false } }));\n\n    if (res.error) {\n      // ALERT DO RSUITE\n      notification('error', {\n        placement: 'topStart',\n        title: 'Ops...',\n        description: res.message,\n      });\n      return false;\n    }\n\n    notification('success', {\n      placement: 'topStart',\n      title: 'Tudo certo',\n      description: 'O cliente foi desvinculado com sucesso!',\n    });\n\n    yield put(allClientesAction());\n    yield put(\n      updateCliente({\n        components: { ...components, drawer: false, confirmDelete: false },\n      })\n    );\n  } catch (err) {\n    // COLOCAR AQUI O ALERT DO RSUITE\n    yield put(updateCliente({ form: { ...form, saving: false } }));\n    notification('error', {\n      placement: 'topStart',\n      title: 'Ops...',\n      description: err.message,\n    });\n  }\n}\n\nexport default all([\n  takeLatest(types.ADD_CLIENTE, addCliente),\n  takeLatest(types.FILTER_CLIENTE, filterCliente),\n  takeLatest(types.ALL_CLIENTES, allClientes),\n  takeLatest(types.UNLINK_CLIENTE, unlinkCliente),\n]);\n"]},"metadata":{},"sourceType":"module"}